[Engine.Camera]
DefaultAspectRatio=1.778
bConstrainAspectRatio=False
ConstrainedAspectRatio=1.778

[XComGame.X2ReactionFireSequencer]
ReactionFireWorldSloMoRate=0.66 ; A value between .33 and 1.0 that will control how much "global" slo motion occurs when showing reaction fire - ie the shooter, sounds, and rest of the world will be slowed

[XComGame.X2CameraStack]
; Curve used for smoothly blending between cameras
BlendCurve=(Points=(\\
	(InVal=0, OutVal=0, ArriveTangent=0, LeaveTangent=0, InterpMode=CIM_CurveAuto),\\
	(InVal=0.24f, OutVal=0.5f, ArriveTangent=2.289, LeaveTangent=2.289, InterpMode=CIM_CurveAuto),\\
	(InVal=0.6f, OutVal=0.95f, ArriveTangent=0.281, LeaveTangent=0.281, InterpMode=CIM_CurveAuto),\\
	(InVal=1, OutVal=1, ArriveTangent=0, LeaveTangent=0, InterpMode=CIM_CurveAuto)))

[XComGame.XComCamera]
; When cinematic cameras request DOF, these are the parameters that are used.
DOF_MaxFarBlurAmount=1.0
DOF_MaxNearBlurAmount=0.0
DOF_FocusInnerRadiusRatio=0.9 ; The radius border extends out to a midpoint at this ratio from the shooter to the target, unless it is lower than the next value
DOF_FocusMinInnerRadius=800.0  ; The radius is equal to DOF_FocusInnerRadiusRatio the distance to the target, or this value, whichever is greater.
DOF_FalloffExponent=1.5
DOF_BlurKernelSize=1.0

[XComGame.X2Camera]
BlendDuration=2

[XComGame.X2Camera_Matinee]
AllowCrossCuts=false
AllowDynamicBlockDetection=true

[XComGame.X2Camera_MatineePodReveal]
AllowCrossCuts=true

[XComGame.X2Camera_LookAt]
; Overhead game camera properties
MaximumInterpolationDistancePerSecond=3000	; in unreal units per second.  The fastest the game cam is allowed to translate.
MaximumInterpolationRotationPerSecond=400	; in degrees per second.  The fastest the game cam is allowed to rotate.
MaximumInterpolationZoomPerSecond=3.0		; in percent, where 1.0 is 100%
RotationInterpolationRampUpDuration=0.4 	; in seconds.  Total time to go from standstill to full interpolation speed
LocationInterpolationRampUpDuration=0.35 	; in seconds.  Total time to go from standstill to full interpolation speed
ZoomInterpolationRampUpDuration=0.25 	    ; in seconds.  Total time to go from standstill to full interpolation speed
ZoomedDistanceFromCursor=2600				; in Unreal units.  Distance from lookat target at maximum zoom.
DistanceFromCursor=1256						; in Unreal units.  Distance from lookat target at minimum zoom.
;<WORKSHOP> Make X2Camera_FollowMovingUnit not move the camera, if the entire unit's movement path is on-camera AMS 2016/04/13
;WAS:
;TetherScreenPercentage=0.075					; percentage of fov that counts as inside the tether. For example, with a 0.5 tether, anything within the center half of the screen is inside the tether
TetherScreenPercentage=1.2					; percentage of fov that counts as inside the tether. 1.2 corresponds roughly with the edges of the screen.
UseSwoopyCam=true

MaxTilesCameraCanMoveOutsideLevelVolume=10 ; how many tiles outside the level volume is the camera allowed to move?

; angles are in degrees
AlienTurnPitch=-25
AlienTurnYaw=68.5
AlienTurnRoll=-2.5
AlienTurnFOV=55

HumanTurnPitch=-38
HumanTurnYaw=48.5
HumanTurnRoll=0
HumanTurnFov=60		

[XComGame.X2Action_CameraLookAt]
SelfTargetLookAtDuration=0
MultiTargetLookAtDuration=0.5f

[XComGame.X2Action_ApplyWeaponDamageToTerrain]
CameraShakeIntensity_Large=0.15
CameraShakeTileThreshold_Large=60
CameraShake_Large="CIN_CameraAnims.Shakes.Shake_BangBig1"

CameraShakeIntensity_Medium=0.08
CameraShakeTileThreshold_Medium=20
CameraShake_Medium="CIN_CameraAnims.Shakes.Shake_Bang2"

CameraShakeIntensity_Small=0.02
CameraShakeTileThreshold_Small=10
CameraShake_Small="CIN_CameraAnims.Shakes.Shake_Bang1"

[XComGame.X2Camera_Midpoint]
AccentZoom=-0.1 ; percentage zoom to add to the camera if the framing still fits (negative numbers zoom in)
FramingFOVPercentage=0.75
MaximumMidpointZoomOut=2800.0

[XComGame.X2Camera_RushCam]
FollowPitchInDegrees=-10      ; ideal pitch of the vector from the camera to the unit
FollowYawInDegrees=-25        ; ideal yaw of the vector from the camera to the unit
FOVInDegrees=45               ; fov to use while following the unit 
CameraYawInDegrees=15         ; camera yaw relative to the follow yaw
CameraFollowDistanceInTiles=2 ; distance, in tiles, by which the camera should trail the moving camera
OffsetBlendTime=0.1           ; time, in seconds, that it take the camera to transition from one block/avoiding offset to another
CameraShake="CIN_CameraAnims.Shakes.Handheld1_Low"

[XComGame.X2Camera_ClimbLadderCam]
DistanceFromLadderInTiles=3     ; ground plane distance to push the camera out from the ladder
DistanceAboveLadderInTiles=1    ; relative offset from the top of the ladder to place the camera
CameraShake="CIN_CameraAnims.Shakes.Handheld1_Low"

[XComGame.X2Camera_TheLostReveal]
CameraShake="CIN_CameraAnims.Shakes.Handheld1_Low"
EnableLostRevealCam=true
LostRevealCamViewDistance=4

[XComGame.X2Camera_FallingCam]
DistanceFromFallInTiles=2     ; ground plane distance to push the camera out from the fall
DistanceBelowFallInTiles=2    ; relative offset from the top of the fall to place the camera
CameraShake="CIN_CameraAnims.Shakes.Handheld1_Low"

[XComGame.X2Camera_LookAtActor_AIReveal]
LocationInterpolationRampUpDuration=0.70 ; in seconds.  Total time to go from standstill to full interpolation speed

[XComGame.X2Camera_OTSTargeting]
BlendDuration=0.75          ; snappier blend from the game cam to the targeting cam
CrosscutScorePenalty=0      ; crosscuts don't matter when targeting, we just don't want to look at the soldier's back
LookAtBackPenalty=6         ; Set to 0 to disregard the preference for the soldier's facing side

[XComGame.X2Camera_OverTheShoulder]
; The camera anim that will be used for the overall "handheld shake" effect while in the OTS cams
CameraShake=(AnimPath="CIN_CameraAnims.Shakes.Handheld1_Low", Rate=1.0, Intensity=1.2)

; Scoring used to determine which Matinee to choose for targeting.  Designed so cross-cutting (crossing the screen direction line) is only permissible if the soldier's head is visually blocked. 
FiringUnitHeadBlockedScorePenalty=16
FiringUnitWaistBlockedScorePenalty=8 ; If this is not high enough we can get cases where our unit is on the other side of the wall
CantSeeFiringUnitAtAllPenalty=24
TargetedLocationBlockedScorePenalty=64
CrosscutScorePenalty=1000         ; Cross cuts are BAD. never do them
LookAtBackPenalty=0               ; Unless targeting, we don't care about looking at the unit's back
BlockedStartLocationPenalty=32
TransparencyPenaltyPercentage=0.3 ; Percentage of the full penalty values above transparent objects will incur

MinTilesBetweenTraceSamples = 0.1
BlockedByPawnsExtentPenalty = 0.2
BlockedByPawnsZeroExtentPenalty = 0.25
MinZeroExtentPenaltyScalar = 0.25
PriorityPenalty[0] = 0  ;MatineeSelectionPriority_High
PriorityPenalty[1] = 1  ;MatineeSelectionPriority_Med
PriorityPenalty[2] = 9  ;MatineeSelectionPriority_Low
PriorityPenalty[3] = 12 ;MatineeSelectionPriority_VeryLow

;  A curve that represents how the camera moves when retargeting (blending from one targeting cam to the next). 
;  The time along the curve is represented as "InVal", from 0 to 1.
;  The value of the curve is represented as "OutVal", from 0 to 1.
;  Tangents are represented as X/1 (X heights over 1 width).  So, 0=flat, 1=45°, 2=27°, etc.  (tan(value in degrees)= value tangent)
;  Keep Arrive and Leave tangents the same to prevent broken tangents
RetargetLocationCurve=(Points=(\\
	(InVal=0, OutVal=0, ArriveTangent=0, LeaveTangent=0, InterpMode=CIM_CurveAuto),\\
	(InVal=0.24f, OutVal=0.53f, ArriveTangent=2.289, LeaveTangent=2.289, InterpMode=CIM_CurveAuto),\\
	(InVal=0.6f, OutVal=0.95f, ArriveTangent=0.281, LeaveTangent=0.281, InterpMode=CIM_CurveAuto),\\
	(InVal=1, OutVal=1, ArriveTangent=0, LeaveTangent=0, InterpMode=CIM_CurveAuto)))

RetargetRotationCurve=(Points=(\\
	(InVal=0, OutVal=0, ArriveTangent=0, LeaveTangent=0, InterpMode=CIM_CurveAuto),\\
	(InVal=0.2f, OutVal=0.65f, ArriveTangent=1.54, LeaveTangent=1.54, InterpMode=CIM_CurveAuto),\\
	(InVal=0.6f, OutVal=0.965f, ArriveTangent=0.21, LeaveTangent=0.21, InterpMode=CIM_CurveAuto),\\
	(InVal=1, OutVal=1, ArriveTangent=0, LeaveTangent=0, InterpMode=CIM_CurveAuto)))

; in seconds.  The retarget duration scales with the magnitude that the camera must rotate upon. Min is at 0 degrees
; adjustment, Max is at 180 degrees
RetargetDurationMin=0.5
RetargetDurationMax=1.6

; in seconds.  The retarget duration also scales with the distance the camera will travel. Min is at 0 tiles, Max is
; at RetargetDurationMaxTiles tiles. The final duration will be the larger of the desired durations for rotation and
; location
RetargetDurationMaxTiles=1.6

; The smaller this number is, the "tighter" the tether is, i.e. the faster it moves to the target location
TetherDuration=.8

; The width of the ray we fire from the camera to the target and shooter when checking for blocking
; geometry. Probably doesn't need to be changed, but here just in case.
TraceWidth=20 ; 20 seems to work better than 24 at not colliding with geometry that is behind the target!

BlockedStartLocationWidth = 4 ; Keep this small, mainly looking to see if the camera is inside something.

[XComGame.X2Camera_OTSReactionFireShooter]
BlendDuration=0.75 ; We want the camera to arrive before the soldier starts shooting. Since they don't wait for the camera to arrive, just make sure the camera is snappy
TetherDuration=.2
CrosscutScorePenalty=0

[XComGame.X2Action_CameraFrameAbility]
FrameDuration=0 ; Amount of time, in seconds, to pause after framing the ability

[XComGame.X2Action_RevealAIBegin]
FirstSightedDelay=0.75

[XComGame.X2Camera_FollowMovingUnit]
TilesToLookAhead=1
TilesToPlaceCameraAheadOfUnit=1
UseFollowUnitCamera=true ; Do we use this camera, or a normal frame ability camera when a unit is moving?
LookAheadVsLookTowardDestinationRatio=0.0 ; 0.0 means only look ahead on the path, 1.0 means only look toward the destination, anything in between is a linear blend
SkipIfPathAlreadyInSafeZone=true ; if true, will only do the camera if the path starts or ends outside the safe zone

[XComGame.X2Camera_Cinescript]

;
;    ______          ____        _      __ 
;   / ___(_)__  ___ / __/_______(_)__  / /_ 
;  / /__/ / _ \/ -_)\ \/ __/ __/ / _ \/ __/
;  \___/_/_//_/\__/___/\__/_/ /_/ ___/\__/ 
;                              /_/  
;
;
;
; INSTRUCTIONS                   
; ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
;  
; "Cinescript" allows an artist to put together a cinematic sequence of cameras to go with in-game abilities. For each
; ability, provide a set of parameters to define that ability, and then an array to specify a sequence of camera cuts,
; using the following template:
; 
; 		AbilityCameras=(AbilityCameraType="CINESCRIPT CAMERA TYPE", ABILITY PARAMETERS, 
; 						CameraCuts[CUT NUMBER]=(SHOT PARAMETERS))
;
; ▌ABILITY PARAMETERS:
;
; 	• "AbilityCameraType": Find ability templates in the .uc files that start with "X2Ability_".  Each template 
;		starts with the line "CREATE_X2ABILITY_TEMPLATE".  The "CinescriptCameraType" should be defined within each
;		ability template.   
; 	• "AbilityItemTemplateNames": Specific item the ability uses, if any.
; 	• "TargetDiedType": Limits usage based on whether the target dies or not.  Possible entries:
;		CinescriptTargetDiedType_Either
;		CinescriptTargetDiedType_Died
;		CinescriptTargetDiedType_Survived 
;	• "ShooterTeam": Limits usage to a specific team.  Possible entries:
;		CinescriptShooterTeam_Either,
;		CinescriptShooterTeam_XCom,
;		CinescriptShooterTeam_Alien
;	• "TargetTeam": Limits usage when a specifc team is the target.  Possible entries:
;		CinescriptTargetTeam_Any,
;		CinescriptTargetTeam_XCom,
;		CinescriptTargetTeam_Alien,
;		CinescriptTargetTeam_Neutral 
;	• "CharacterTemplates": For abilities shared by multiple character types, allows limiting by character template.  
;       This acts as an override to other cinescript sections with the same ability.
;   • "ShouldShowCursor": Unhide the cursor if true, default is false. Used for scenes that are interactive.
;   • "StartBeforeStepout": Starts the cinescript executing before the stepout begins, instead of after
;   • "ExtraAbilityEndDelay": Extends the time the cameras are focused on an ability, for cases when we want to see the
;       residual effects, like an explosion after a grenade throw.
;
; ▌SHOT PARAMETERS:
;
; 	• "NewCameraType": Specify the type of camera. Possible entries: 
;		CinescriptCameraType_Midpoint - 		A camera that zooms out and frames two subjects.
;		CinescriptCameraType_OverTheShoulder - 	Constructs a camera based on a specified Matinee, using two markers in 
;												the Matinee to frame the shooter and target dynamically.  
;		CinescriptCameraType_Matinee - 			Plays a specified Matinee. 
;		CinescriptCameraType_Exit - 			Exits from the Cinescript sequence, back to game camera.
;	• "MatineeCommentPrefix": Specify the Matinee to be played using the name entered in the Matinee comment. 
;	  	The name is a prefix, meaning there can be variations (i.e. "CIN_KillAlien" would pick from "CIN_KillAlien_1",
;	  	"CIN_KillAlien_2", etc).  If the suffix contains "_L" or "_R", then the game will attempt to pick a camera with
;		the same screen direction (i.e. if you are looking at the soldier's left side, it will cut to an "L" scene)
;	• "CutDelay": Time in seconds to delay the next cut.
;	• "CutAnimNotify": When a cut is to be triggered by a specified anim notify. 
;	• "CutAfterPrevious": When the Matinee ends during the previous shot, cut to the next shot.
;	• "CutChance": Chance this cut will occur, from 0 to 1.
;	• "FocusPrimaryTarget": When this is "True", the specified shot will use the target as the subject of the shot. 
;	• "FocusShooterItemUnit": Matinee only. Focuses the matinee on the shooter's item unit (ex. gremlin)
;	• "TargetType": For the "Midpoint" camera type. Specifies what the camera should frame. Possible entries are:
;		CinescriptTargetType_ShooterAndPrimaryTarget -	Shooter and primary target of an ability
;		CinescriptTargetType_AllTargets -				All targets of an ability
;		CinescriptTargetType_AllParticipants - 			All targets and the shooter of an ability
;		CinescriptTargetType_ShooterItem -				The gremlin (cosmetic unit)
;	• "DisableBlend": Causes a hard cut if true, blends to camera if false.  For the "Matinee" and "OTS" camera types. 
;	    (Default "True")
;	• "PopWhenFinished": When set on a Matinee cut, that Matinee will not hold indefinitely once the Matinee finishes 
;		(Default "True") 
;	• "IgnoreStepoutFixups": If true, will not do stepout fixup/prediction logic and instead center the matinee on the
;		unit. For the "Matinee" camera type.
;		(Default "False")
;	• "ShouldAlwaysShow": When "True", this will force the camera to play, even if the screen direction and collision
;		checks fail.
;
; ▌NOTE: Abilities are always framed by a midpoint camera outside of what cinescript does, unless the ability
;		 template has disabled this.  So, at the beginning of the ability, the camera will move to frame all of the
;		 characters involved, and at the end of the ability, it will go back to the game camera.  This means that, if 
;		 an "exit" camera is called in CineScript, it will "exit" back to the midpoint camera.
;
; ▌TESTING: 
;
;  Console commands:
; 	• "X2DebugCameras": Displays info about which cameras are running
; 	• "ToggleGodMode": Unlimited movement, unlimited ammo w/o reloads, no ability cooldowns, never miss shots
; 	• "DeadEye": Shots fired always hit
; 	• "DropUnit [Character Template] 1": To drop an enemy for testing.  
; 	  "DropUnit [Character Template] 0": To drop a friendly for testing.
; 	  "DropUnit [Character Template] 1 1": To drop an enemy, who plays a reveal camera.
;		  AdvTrooperM1 is Advent Trooper
;         Sectoid is Sectoid
;		  Templates can be found in X2Character_DefaultCharacters.uc
;
;
; FOCUS FIRES and DEATH CAMS, XCOM TEAM              
; ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀
		
; ▌STANDARD SHOT BY XCOM TEAM
; The initial targeting camera is called by code.  To add a new targeting set, add the definition for "CharTemplate.strTargetingMatineePrefix" in the "X2Character_DefaultCharacters.uc" and "X2Character_DefaultMPCharacters.uc" files
AbilityCameras=(AbilityCameraType="StandardGunFiring", \\
	ShooterTeam=CinescriptShooterTeam_XCom, \\
	ExtraAbilityEndDelay=0, \\
	StartBeforeStepout=1, \\
	CameraCuts[0]=(\\
		ShouldAlwaysShow=false, \\
		NewCameraType=CinescriptCameraType_OverTheShoulder, \\
		MatineeCommentPrefix="CIN_Soldier_FF_Firing"), \\
	CameraCuts[1]=(\\
		CutAnimNotify="DeathCut", \\
		FocusPrimaryTarget=True, \\
		CutChance=.5, \\
		NewCameraType=CinescriptCameraType_OverTheShoulder, \\
		MatineeCommentPrefix="CIN_Soldier_OTSDeath"), \\
	CameraCuts[2]=(\\
		CutAfterPrevious=True, \\
		NewCameraType=CinescriptCameraType_Exit), \\
	CameraCuts[3]=(\\
		CutAnimNotify="Soldier_DeathABC", \\
		FocusPrimaryTarget=True, \\
		CutChance=.65, \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix="CIN_Soldier_DeathABC"), \\
	CameraCuts[4]=(\\
		CutAfterPrevious=True, \\
		NewCameraType=CinescriptCameraType_Exit), \\
	CameraCuts[5]=(\\
		CutAnimNotify="Soldier_DeathD", \\
		FocusPrimaryTarget=True, \\
		CutChance=.65, \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix="CIN_Soldier_DeathD"), \\
	CameraCuts[6]=(\\
		CutAfterPrevious=True, \\
		NewCameraType=CinescriptCameraType_Exit), \\
	CameraCuts[7]=(\\
		CutAnimNotify="Soldier_Rifle", \\
		CutChance=0.5, \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix="CIN_Soldier_FF_Rifle"), \\
	CameraCuts[8]=(\\
		CutAfterPrevious=True, \\
		ShouldAlwaysShow=True, \\
		NewCameraType=CinescriptCameraType_OverTheShoulder, \\
		MatineeCommentPrefix="CIN_Soldier_FF_StartPos"), \\
	CameraCuts[9]=(\\
		CutAnimNotify="Soldier_SniperCock", \\
		CutChance=0.5, \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix="CIN_Soldier_FF_SniperCock"), \\
	CameraCuts[10]=(\\
		CutAfterPrevious=True, \\
		NewCameraType=CinescriptCameraType_Exit), \\
	CameraCuts[11]=(\\
		CutAnimNotify="Soldier_ShotgunCock", \\
		CutChance=0.5, \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix="CIN_Soldier_FF_ShotgunCock"), \\
	CameraCuts[12]=(\\
		CutAfterPrevious=True, \\
		NewCameraType=CinescriptCameraType_Exit), \\
	CameraCuts[13]=(\\
		CutAnimNotify="Soldier_Sniper", \\
		CutChance=0.5, \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix="CIN_Soldier_FF_SniperFire"), \\
	CameraCuts[14]=(\\
		CutAfterPrevious=True, \\
		ShouldAlwaysShow=True, \\
		NewCameraType=CinescriptCameraType_OverTheShoulder, \\
		MatineeCommentPrefix="CIN_Soldier_FF_StartPos"), \\
	CameraCuts[15]=(\\
		CutAnimNotify="Soldier_Cannon", \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		CutChance=0.5, \\
		MatineeCommentPrefix="CIN_Soldier_FF_Cannon"), \\
	CameraCuts[16]=(\\
		CutAfterPrevious=True, \\
		ShouldAlwaysShow=True, \\
		NewCameraType=CinescriptCameraType_OverTheShoulder, \\
		MatineeCommentPrefix="CIN_Soldier_FF_StartPos"), \\
	CameraCuts[17]=(\\
		CutAnimNotify="Soldier_Pistol", \\
		CutChance=.75, \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix="CIN_Soldier_FF_Pistol"), \\
	CameraCuts[18]=(\\
		CutAfterPrevious=True, \\
		NewCameraType=CinescriptCameraType_OverTheShoulder, \\
		MatineeCommentPrefix="CIN_Soldier_FF_StartPos"), \\
	CameraCuts[19]=(\\
		CutAnimNotify="EnterCoverCut", \\
		NewCameraType=CinescriptCameraType_Exit), \\
	CameraCuts[20]=(\\
		CutAnimNotify="Templar_ReflectDeflect", \\
		FocusPrimaryTarget=True, \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix="CIN_Quick_Soldier"), \\
	CameraCuts[21]=(\\
		CutAnimNotify="Templar_ReflectDeflectExit", \\
		NewCameraType=CinescriptCameraType_Exit))

; ▌STANDARD SHOT BY XCOM TEAM: MUTON, ANDROMEDON
; This adjusts the "STANDARD SHOT BY XCOM TEAM" and "STANDARD SHOT BY ALIEN TEAM" blocks, to specify a unique targeting camera for the character
MatineeReplacements=(CharacterTemplates[0]="Muton", \\
					 CharacterTemplates[1]="Andromedon", \\
					 OriginalPrefix="CIN_Soldier_FF_Firing", \\
					 ReplacementPrefix="CIN_Muton_FF_Firing")
					 
; ▌STANDARD SHOT BY XCOM TEAM: GATEKEEPER
; This adjusts the "STANDARD SHOT BY XCOM TEAM" and "STANDARD SHOT BY ALIEN TEAM" blocks, to specify a unique targeting camera for the character
MatineeReplacements=(CharacterTemplates[0]="Gatekeeper", \\
					 OriginalPrefix="CIN_Soldier_FF_Firing", \\
					 ReplacementPrefix="CIN_Gatekeeper_FF_Firing")

; ▌STANDARD SHOT BY XCOM TEAM: SECTOPOD
; This adjusts the "STANDARD SHOT BY XCOM TEAM" and "STANDARD SHOT BY ALIEN TEAM" blocks, to specify a unique targeting camera for the character
MatineeReplacements=(CharacterTemplates[0]="Sectopod", \\
					 OriginalPrefix="CIN_Soldier_FF_Firing", \\
					 ReplacementPrefix="CIN_Sectopod_FF_Firing")

; ▌STANDARD SHOT BY XCOM TEAM: MEC, VIPER, ARCHON
; This adjusts the "STANDARD SHOT BY XCOM TEAM" and "STANDARD SHOT BY ALIEN TEAM" blocks, to specify a unique targeting camera for the character
MatineeReplacements=(CharacterTemplates[0]=AdvMEC_M1, \\
					 CharacterTemplates[1]=AdvMEC_M2, \\
					 CharacterTemplates[2]=Viper, \\
					 CharacterTemplates[3]=Archon, \\
					 OriginalPrefix="CIN_Soldier_FF_Firing", \\
					 ReplacementPrefix="CIN_AdventMEC_FF_Firing")

; ▌STANDARD SHOT BY XCOM TEAM: TURRETS
; This adjusts the "STANDARD SHOT BY XCOM TEAM" and "STANDARD SHOT BY ALIEN TEAM" blocks, to specify a unique targeting camera for the character
MatineeReplacements=(CharacterTemplates[0]="AdvTurretM1", \\
					 CharacterTemplates[1]="AdvTurretM2", \\
					 CharacterTemplates[2]="AdvTurretM3", \\
					 CharacterTemplates[3]="AdvShortTurret", \\
					 CharacterTemplates[4]="XComTurretM1", \\
					 CharacterTemplates[5]="XComTurretM2", \\
					 OriginalPrefix="CIN_Soldier_FF_Firing", \\
					 ReplacementPrefix="CIN_Turret_FF_Firing")

; ▌HEAVY WEAPON SHOT, XCOM TEAM
; Wrist based weapons on heavy armor
AbilityCameras=(AbilityCameraType="Soldier_HeavyWeapons", \\
	ShooterTeam=CinescriptShooterTeam_XCom, \\
	ExtraAbilityEndDelay=1, \\
	CameraCuts[0]=(\\
		NewCameraType=CinescriptCameraType_Midpoint, \\
		TargetType=CinescriptTargetType_AllParticipants), \\
	CameraCuts[1]=(\\
		CutAnimNotify="Soldier_Heavy", \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		CutChance=1, \\
		MatineeCommentPrefix="CIN_Soldier_FF_Heavy"), \\
	CameraCuts[2]=(\\
		CutAnimNotify="Soldier_Heavy_Exit", \\
		NewCameraType=CinescriptCameraType_Exit), \\
	CameraCuts[3]=(\\
		CutAnimNotify="Soldier_Flamethrower", \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		CutChance=1, \\
		MatineeCommentPrefix="CIN_Soldier_FF_Flamethrower"), \\
	CameraCuts[4]=(\\
		CutAfterPrevious=True, \\
		NewCameraType=CinescriptCameraType_Exit))


; FOCUS FIRES and DEATH CAMS, ALIEN TEAM             
; ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀

; ▌STANDARD SHOT BY ALIEN TEAM, KILL SHOT
; The "kill" and "non kill" scripts are only different because the victim plays a hurt and then a death sequentially
; See the "MatineeReplacements" above, which allows these to use different cameras for different character types.
; Some characters will not trigger the "FireStart" AnimNotify if they are not in cover.
AbilityCameras=(AbilityCameraType="StandardGunFiring", \\
	ShooterTeam=CinescriptShooterTeam_Alien, \\
	TargetDiedType=CinescriptTargetDiedType_Died, \\
	StartBeforeStepout=1, \\
	ExtraAbilityEndDelay=0, \\
	CameraCuts[0]=(\\
		CutAnimNotify="FireStart", \\
		CutChance=.65, \\
		NewCameraType=CinescriptCameraType_OverTheShoulder, \\
		MatineeCommentPrefix="CIN_Soldier_FF_Firing"), \\
	CameraCuts[1]=(\\
		CutAnimNotify="DeathCut", \\
		FocusPrimaryTarget=True, \\
		CutChance=.5, \\
		NewCameraType=CinescriptCameraType_OverTheShoulder, \\
		MatineeCommentPrefix="CIN_Soldier_OTSDeath"), \\
	CameraCuts[2]=(\\
		CutAfterPrevious=True, \\
		NewCameraType=CinescriptCameraType_Exit), \\
	CameraCuts[3]=(\\
		CutAnimNotify="Soldier_DeathABC", \\
		FocusPrimaryTarget=True, \\
		CutChance=.65, \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix="CIN_Soldier_DeathABC"), \\
	CameraCuts[4]=(\\
		CutAfterPrevious=True, \\
		NewCameraType=CinescriptCameraType_Exit), \\
	CameraCuts[5]=(\\
		CutAnimNotify="Soldier_DeathD", \\
		FocusPrimaryTarget=True, \\
		CutChance=.65, \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix="CIN_Soldier_DeathD"), \\
	CameraCuts[6]=(\\
		CutAfterPrevious=True, \\
		NewCameraType=CinescriptCameraType_Exit))

; ▌STANDARD SHOT BY ALIEN TEAM, NON-KILL
AbilityCameras=(AbilityCameraType="StandardGunFiring", \\
	ShooterTeam=CinescriptShooterTeam_Alien, \\
	TargetDiedType=CinescriptTargetDiedType_Survived, \\
	StartBeforeStepout=1, \\
	ExtraAbilityEndDelay=0, \\
	CameraCuts[0]=(\\
		NewCameraType=CinescriptCameraType_Midpoint, \\
		TargetType=CinescriptTargetType_AllParticipants), \\
	CameraCuts[1]=(\\
		CutAnimNotify="FireStart", \\
		CutChance=.65, \\
		NewCameraType=CinescriptCameraType_OverTheShoulder, \\
		MatineeCommentPrefix="CIN_Soldier_FF_Firing"), \\
	CameraCuts[2]=(\\
		CutAnimNotify="Soldier_ShotAt", \\
		FocusPrimaryTarget=True, \\
		CutChance=.65, \\
		NewCameraType=CinescriptCameraType_OverTheShoulder, \\
		MatineeCommentPrefix="CIN_Soldier_FF_Targeted"), \\
	CameraCuts[3]=(\\
		CutAnimNotify="Templar_ReflectDeflect", \\
		FocusPrimaryTarget=True, \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix="CIN_Quick_Soldier"), \\
	CameraCuts[4]=(\\
		CutAnimNotify="Templar_ReflectDeflectExit", \\
		NewCameraType=CinescriptCameraType_Exit), \\
	CameraCuts[5]=(\\
		CutAnimNotify="EnterCoverCut", \\
		NewCameraType=CinescriptCameraType_Exit), \\
	CameraCuts[6]=(\\
		CutAnimNotify="FireExit", \\
		NewCameraType=CinescriptCameraType_Exit))
; These last two lines allow the cameras to exit the cameras more quickly.  "EnterCoverCut" is called by code.		
		
; ▌STANDARD SHOT BY ALIEN TEAM, SHOOTING AT CIVILIANS
AbilityCameras=(AbilityCameraType="StandardGunFiring", \\
	ExtraAbilityEndDelay=0, \\
	ShooterTeam=CinescriptShooterTeam_Alien, \\
	TargetTeam=CinescriptTargetTeam_Neutral, \\
	TargetDiedType=CinescriptTargetDiedType_Either)

; ▌STANDARD SHOT BY ALIEN TEAM, TURRETS
; Non-lethal shots will not use special cameras, lethal shots will only use the firing camera
AbilityCameras=(AbilityCameraType="StandardGunFiring", \\
	CharacterTemplates[0]="AdvTurretM1", CharacterTemplates[1]="AdvTurretM2", \\
	CharacterTemplates[2]="AdvTurretM3", CharacterTemplates[3]="AdvShortTurret", \\
	CharacterTemplates[4]="XComTurretM1", CharacterTemplates[5]="XComTurretM2", \\
	ExtraAbilityEndDelay=0, \\
	ShooterTeam=CinescriptShooterTeam_Alien, \\
	TargetDiedType=CinescriptTargetDiedType_Survived)
	
AbilityCameras=(AbilityCameraType="StandardGunFiring", \\
	CharacterTemplates[0]="AdvTurretM1", CharacterTemplates[1]="AdvTurretM2", \\
	CharacterTemplates[2]="AdvTurretM3", CharacterTemplates[3]="AdvShortTurret", \\
	CharacterTemplates[4]="XComTurretM1", CharacterTemplates[5]="XComTurretM2", \\
	ExtraAbilityEndDelay=0, \\
	ShooterTeam=CinescriptShooterTeam_Alien, \\
	TargetDiedType=CinescriptTargetDiedType_Died, \\
	CameraCuts[0]=(\\
		NewCameraType=CinescriptCameraType_OverTheShoulder, \\
		MatineeCommentPrefix="CIN_Turret_FF_Firing"))

; ▌STANDARD SHOT BY ANY TEAM, SHOOTING AT THE LOST
AbilityCameras=(AbilityCameraType="StandardGunFiring", \\
	TargetTeam=CinescriptTargetTeam_TheLost, \\
	TargetDiedType=CinescriptTargetDiedType_Either, \\
	CameraCuts[0]=(\\
		NewCameraType=CinescriptCameraType_Midpoint, \\
		TargetType=CinescriptTargetType_ShooterAndPrimaryTarget))

; SOLDIER ABILITIES                   
; ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀

; ▌GENERIC ACCENT CAM. (THIS SHOULD BE REMOVED)
; A default camera for all abilities.  Any ability that calls for an Accent Cam can use this AbilityCameraType name.
AbilityCameras=(AbilityCameraType="GenericAccentCam")

; ▌SOLDIER: MOVEMENT
AbilityCameras=(AbilityCameraType="StandardMovement", \\
	ShooterTeam=CinescriptShooterTeam_XCom, \\
	CameraCuts[0]=(\\
		CutAnimNotify="Soldier_WindowJump", \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix="CIN_Soldier_WindowJump"), \\
	CameraCuts[1]=(\\
		CutAfterPrevious=True, \\
		NewCameraType=CinescriptCameraType_Exit), \\
	CameraCuts[2]=(\\
		CutAnimNotify="Soldier_DoorKick", \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix="CIN_Soldier_DoorKick", \\
		IgnoreStepoutFixups=True, \\
		ShouldAlwaysShow=true), \\
	CameraCuts[3]=(\\
		CutAfterPrevious=True, \\
		NewCameraType=CinescriptCameraType_Exit))

; ▌SOLDIER: GRENADE THROW
AbilityCameras=(AbilityCameraType="StandardGrenadeFiring", \\
	ExtraAbilityEndDelay=2, \\
	CameraCuts[0]=(\\
		CutAnimNotify="Soldier_GrenadeThrow", \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix="CIN_Soldier_Grenade"), \\
	CameraCuts[1]=(\\
		CutAfterPrevious=True, \\
		NewCameraType=CinescriptCameraType_Midpoint, \\
		TargetType=CinescriptTargetType_AllParticipants), \\		
	CameraCuts[2]=(\\
		CutAnimNotify="Soldier_GrenadeRoll", \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix="CIN_Quick_Soldier"), \\
	CameraCuts[3]=(\\
		CutAnimNotify="Soldier_GrenadeRoll_Exit", \\
		NewCameraType=CinescriptCameraType_Exit))
		
; ▌SOLDIER: GRENADE LAUNCHER
AbilityCameras=(AbilityCameraType="Grenadier_GrenadeLauncher", \\
	ExtraAbilityEndDelay=2, \\
	CameraCuts[0]=(\\
		CutAnimNotify="Soldier_GrenadeLauncher", \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix="CIN_Soldier_GrenadeLauncher"), \\
	CameraCuts[1]=(\\
		CutAfterPrevious=True, \\
		NewCameraType=CinescriptCameraType_Exit))

; ▌SOLDIER: HACKING
AbilityCameras=(AbilityCameraType="Hack", ShouldShowCursor=1, GameplayRequired=true, \\
	CameraCuts[0]=(\\
		CutAnimNotify="BeginHack", \\
		ShouldAlwaysShow=true, \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		PopWhenFinished=false, \\
		IgnoreStepoutFixups=true, \\
		SnapMatineeToGround=true, \\
		MatineeCommentPrefix="CIN_Soldier_Hack_Start"), \\
	CameraCuts[1]=(\\
		CutAnimNotify="EndHack", \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		IgnoreStepoutFixups=true, \\
		MatineeCommentPrefix="CIN_Soldier_Hack_Stop"), \\
	CameraCuts[2]=(\\
		CutAfterPrevious=True, \\
		NewCameraType=CinescriptCameraType_Exit), \\
	CameraCuts[3]=(\\
		CutAnimNotify="Soldier_LootCrate", \\
		PopWhenFinished=False, \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix="CIN_Soldier_LootCrate"), \\
	CameraCuts[4]=(\\
		CutAnimNotify="Soldier_LootBody", \\
		PopWhenFinished=False, \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix="CIN_Soldier_LootBody"), \\
	CameraCuts[5]=(\\
		CutAnimNotify="Soldier_Loot_Exit", \\
		NewCameraType=CinescriptCameraType_Exit))

; ▌SOLDIER: LOOTING
AbilityCameras=(AbilityCameraType="Loot", ShouldShowCursor=1, \\
	CameraCuts[0]=(\\
		CutAnimNotify="Soldier_LootCrate", \\
		PopWhenFinished=False, \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix="CIN_Soldier_LootCrate"), \\
	CameraCuts[1]=(\\
		CutAnimNotify="Soldier_LootBody", \\
		PopWhenFinished=False, \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix="CIN_Soldier_LootBody"), \\
	CameraCuts[2]=(\\
		CutAnimNotify="Soldier_Loot_Exit", \\
		NewCameraType=CinescriptCameraType_Exit))
		
; ▌SOLDIER: EVAC
AbilityCameras=(AbilityCameraType="Soldier_Evac", \\
	CameraCuts[0]=(\\
		CutAnimNotify="Soldier_Evac", \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix="CIN_Quick_Soldier"), \\
	CameraCuts[1]=(\\
		CutAnimNotify="CutOut", \\
		NewCameraType=CinescriptCameraType_Exit))
		
; ▌SOLDIER: GRAPPLE
AbilityCameras=(AbilityCameraType="Soldier_Grapple", \\
	CameraCuts[0]=(\\
		CutAnimNotify="Soldier_GrappleFire", \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix="CIN_Soldier_GrappleFire", \\
		CutChance=.65), \\
	CameraCuts[1]=(\\
		CutAnimNotify="Soldier_GrappleStart", \\
		NewCameraType=CinescriptCameraType_Exit))
		
; ▌SOLDIER: PANIC (Accent Cam only)
AbilityCameras=(AbilityCameraType="Panic", \\
	ExtraAbilityEndDelay=0)	

; ▌SOLDIER: OVERWATCH (No cameras needed)
	
; ▌SOLDIER: PICK UP INJURED SOLDIER
AbilityCameras=(AbilityCameraType="Soldier_CarryPickup", \\
	CameraCuts[0]=(\\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix="CIN_Quick_Soldier"))

; ▌SOLDIER: "SKULL JACK"
AbilityCameras=(AbilityCameraType="Soldier_Skulljack_Stage1", ShouldShowCursor=1, GameplayRequired=true, \\
	CameraCuts[0]=(\\
		CutAnimNotify="Soldier_Skulljack_Start", \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix="CIN_Soldier_SkulljackStart"), \\
	CameraCuts[1]=(\\
		IgnoreStepoutFixups=True, \\
		CutAnimNotify="Soldier_Skulljack_Loop", \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix="CIN_Soldier_SkulljackLoop", \\
		ShouldAlwaysShow=True, \\
		PopWhenFinished=False), \\
	CameraCuts[2]=(\\
		IgnoreStepoutFixups=True, \\
		CutAnimNotify="Soldier_Skulljack_Stop", \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix="CIN_Soldier_SkulljackStop"), \\
	CameraCuts[3]=(\\
		CutAfterPrevious=True, \\
		NewCameraType=CinescriptCameraType_Exit))

; ▌SOLDIER / PSI OPERATIVE: "VOID RIFT" (Ignites a rift at a chosen location)
; ▌SOLDIER / PSI OPERATIVE: "NULL LANCE" (Projects a beam to a chosen area)
; ▌SOLDIER / PSI OPERATIVE: "STASIS" (Fired at a friendly)
; ▌SOLDIER / PSI OPERATIVE: "INSPIRE" (Fired at a friendly)
; ▌AVATAR: DIMENSIONAL RIFT
AbilityCameras=(AbilityCameraType="Psionic_FireAtLocation", \\
	CameraCuts[0]=(\\
		CutAnimNotify="Soldier_PsiProjectile", \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix="CIN_Soldier_PsiAmp"), \\
	CameraCuts[1]=(\\
		CutAfterPrevious=True, \\
		NewCameraType=CinescriptCameraType_Exit))

; ▌SOLDIER / PSI OPERATIVE: "DOMINATION" (Mind control)
; ▌SOLDIER / PSI OPERATIVE: "MINDBLAST" / "SOUL FIRE"
; ▌SOLDIER / PSI OPERATIVE: "INSANITY"
; ▌AVATAR: MIND CONTROL 
AbilityCameras=(AbilityCameraType="Psionic_FireAtUnit", \\
	TargetDiedType=CinescriptTargetDiedType_Survived, \\
	CameraCuts[0]=(\\
		CutAnimNotify="Soldier_PsiProjectile", \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix="CIN_Soldier_PsiAmp"), \\
	CameraCuts[1]=(\\
		CutAfterPrevious=True, \\
		NewCameraType=CinescriptCameraType_OverTheShoulder, \\
		MatineeCommentPrefix="CIN_Soldier_FF_Targeted", \\
		FocusPrimaryTarget=True), \\
	CameraCuts[2]=(\\
		CutAnimNotify="MindControl_Exit", \\
		NewCameraType=CinescriptCameraType_Exit))
		
AbilityCameras=(AbilityCameraType="Psionic_FireAtUnit", \\
	TargetDiedType=CinescriptTargetDiedType_Died, \\
	CameraCuts[0]=(\\
		CutAnimNotify="Soldier_PsiProjectile", \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix="CIN_Soldier_PsiAmp"), \\
	CameraCuts[1]=(\\
		CutAfterPrevious=True, \\
		NewCameraType=CinescriptCameraType_Midpoint, \\
		TargetType=CinescriptTargetType_AllParticipants), \\
	CameraCuts[2]=(\\
		CutAnimNotify="DeathCut", \\
		FocusPrimaryTarget=True, \\
		CutChance=.5, \\
		NewCameraType=CinescriptCameraType_OverTheShoulder, \\
		MatineeCommentPrefix="CIN_Soldier_OTSDeath"), \\
	CameraCuts[3]=(\\
		CutAfterPrevious=True, \\
		NewCameraType=CinescriptCameraType_Exit), \\
	CameraCuts[4]=(\\
		CutAnimNotify="Soldier_DeathABC", \\
		FocusPrimaryTarget=True, \\
		CutChance=1, \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix="CIN_Soldier_DeathABC"), \\
	CameraCuts[5]=(\\
		CutAfterPrevious=True, \\
		NewCameraType=CinescriptCameraType_Exit), \\
	CameraCuts[6]=(\\
		CutAnimNotify="Soldier_DeathD", \\
		FocusPrimaryTarget=True, \\
		CutChance=1, \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix="CIN_Soldier_DeathD"), \\
	CameraCuts[7]=(\\
		CutAfterPrevious=True, \\
		NewCameraType=CinescriptCameraType_Exit))

; ▌SOLDIER / RANGER: SWORD MELEE
; Only plays the cinematic camera for the lethal attacks
AbilityCameras=(AbilityCameraType="Ranger_Reaper", \\
	CameraCuts[0]=(\\
		CutAnimNotify="Soldier_SwordKill", \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		FocusPrimaryTarget=True, \\
		IgnoreStepoutFixups=True, \\
		MatineeCommentPrefix="CIN_Soldier_Sword"), \\
	CameraCuts[1]=(\\
		CutAfterPrevious=True, \\
		NewCameraType=CinescriptCameraType_Exit), \\
	CameraCuts[2]=(\\
		CutAnimNotify="Soldier_RunningSwordKill", \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		FocusPrimaryTarget=True, \\
		IgnoreStepoutFixups=True, \\
		MatineeCommentPrefix="CIN_Soldier_RunningSword"), \\
	CameraCuts[3]=(\\
		CutAfterPrevious=True, \\
		NewCameraType=CinescriptCameraType_Exit), \\
	CameraCuts[4]=(\\
		CutAnimNotify="Muton_CounterAttack", \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix="CIN_Muton_Counterattack"))

; ▌SOLDIER / GRENADIER: "EQUALIZER"

; ▌SOLDIER / GRENADIER: "SATURATION FIRE"
AbilityCameras=(AbilityCameraType="Grenadier_SaturationFire", \\
	CameraCuts[0]=(\\
		CutAnimNotify="Soldier_Cannon", \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		CutChance=.65, \\
		MatineeCommentPrefix="CIN_Soldier_FF_Cannon"), \\
	CameraCuts[1]=(\\
		CutAfterPrevious=True, \\
		NewCameraType=CinescriptCameraType_Exit))

; ▌SOLDIER / SPECIALIST: "INTRUSION PROTOCOL" (GREMLIN HACK)
AbilityCameras=(AbilityCameraType="Gremlin_Hack_Soldier", ShouldShowCursor=1, GameplayRequired=true, \\
	CameraCuts[0]=(\\
		CutAnimNotify="Soldier_SendGremlin", \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix="CIN_Quick_Wide"), \\
	CameraCuts[1]=(\\
		CutAnimNotify="Soldier_SendGremlin_CutOut", \\
		NewCameraType=CinescriptCameraType_Exit))

AbilityCameras=(AbilityCameraType="Specialist_IntrusionProtocol", ShouldShowCursor=1, GameplayRequired=true, \\
	CameraCuts[0]=(\\
		CutAnimNotify="Gremlin_BeginHack", \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		PopWhenFinished=False, \\
		ShouldAlwaysShow=True,\\
		FocusShooterItemUnit=True,\\
		MatineeCommentPrefix="CIN_Gremlin_HackStart"), \\
	CameraCuts[1]=(\\
		CutAnimNotify="Gremlin_EndHack", \\
		FocusShooterItemUnit=True,\\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix="CIN_Gremlin_HackExit"), \\
	CameraCuts[2]=(\\
		CutAfterPrevious=True, \\
		NewCameraType=CinescriptCameraType_Exit))

; ▌SOLDIER / SPECIALIST: "DEFENSIVE PROTOCOL"
AbilityCameras=(AbilityCameraType="Specialist_DefensiveProtocol", \\
	CameraCuts[0]=(\\
		CutAnimNotify="Soldier_SendGremlin", \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix="CIN_Quick_Wide"), \\
	CameraCuts[1]=(\\
		CutAnimNotify="Soldier_SendGremlin_CutOut", \\
		NewCameraType=CinescriptCameraType_Exit))

; ▌SOLDIER / SPECIALIST: "COMBAT PROTOCOL"
AbilityCameras=(AbilityCameraType="Specialist_CombatProtocol", \\
	CameraCuts[0]=(\\
		CutAnimNotify="Soldier_SendGremlin", \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix="CIN_Quick_Wide"), \\
	CameraCuts[1]=(\\
		CutAnimNotify="Soldier_SendGremlin_CutOut", \\
		NewCameraType=CinescriptCameraType_Midpoint, \\
		TargetType=CinescriptTargetType_ShooterItem), \\
	CameraCuts[2]=(\\
		CutAnimNotify="Gremlin_CombatProtocol_Exit", \\
		NewCameraType=CinescriptCameraType_Exit))
	; This generic camera isn't working too well.
	; If I can make a custom cam for this it will go back in.
	; CameraCuts[2]=(\\
		; CutAnimNotify="Gremlin_CombatProtocol", \\
		; NewCameraType=CinescriptCameraType_Matinee, \\
		; MatineeCommentPrefix="CIN_Quick_Wide", \\
		; FocusShooterItemUnit=True), \\
		
; ▌SOLDIER / SPECIALIST: "SCANNING PROTOCOL"
AbilityCameras=(AbilityCameraType="Specialist_ScanningProtocol", \\
	CameraCuts[0]=(\\
		CutAnimNotify="Soldier_SendGremlin", \\
		CutChance=.3, \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix="CIN_Quick_Wide"), \\
	CameraCuts[1]=(\\
		CutAnimNotify="Soldier_SendGremlin_CutOut", \\
		NewCameraType=CinescriptCameraType_Exit))
	; CameraCuts[1]=(\\
		; CutAnimNotify="Soldier_SendGremlin_CutOut", \\
		; NewCameraType=CinescriptCameraType_Exit))
; ▌SOLDIER / SPECIALIST: "DISABLING SHOT" (FF)
;AbilityCameras=(AbilityCameraType="DisablingGunFiring", \\

; ALIEN ABILITIES
; ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀

; ADVENT
; ▀▀▀▀▀▀▀▀▀▀▀▀

; ▌ADVENT MEC: MICRO MISSILES
AbilityCameras=(AbilityCameraType="MEC_MicroMissiles", \\
	CameraCuts[0]=(\\
		CutAnimNotify="MEC_MicroMissiles", \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix="CIN_Quick_Wide"), \\
	CameraCuts[1]=(\\
		CutAnimNotify="MEC_MicroMissiles_Exit", \\
		NewCameraType=CinescriptCameraType_Exit))

; ▌ADVENT SHIELDBEARER: ENERGY SHIELD ARMOR
AbilityCameras=(AbilityCameraType="AdvShieldBearer_EnergyShieldArmor", \\
	CameraCuts[0]=(\\
		CutAnimNotify="Adv_EnergyShield", \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix="CIN_Quick_Wide"), \\
	CameraCuts[1]=(\\
		CutAnimNotify="Adv_EnergyShield_Exit", \\
		NewCameraType=CinescriptCameraType_Midpoint, \\
		TargetType=CinescriptTargetType_AllParticipants))

; ▌ADVENT STUN LANCER: STUN LANCER
AbilityCameras=(AbilityCameraType="AdvStunLancer_StunLancer", \\
	CameraCuts[0]=(\\
		CutAnimNotify="Advent_StunLance", \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix="CIN_Quick_Wide"), \\
	CameraCuts[1]=(\\
		CutAnimNotify="Advent_RunningStunLance", \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		FocusPrimaryTarget=True, \\
		IgnoreStepoutFixups=True, \\
		MatineeCommentPrefix="CIN_Quick_Wide"), \\
	CameraCuts[2]=(\\
		CutAnimNotify="Advent_StunLance_Exit", \\
		NewCameraType=CinescriptCameraType_Exit))

; ADVENT AVATAR
; ▀▀▀▀▀▀▀▀▀▀▀▀

; ▌AVATAR: DIMENSIONAL RIFT (See Psi Operative Soldier section for Stage 1)
AbilityCameras=(AbilityCameraType="Avatar_DimensionalRift_Stage2", \\
	ExtraAbilityEndDelay=1, \\
	CameraCuts[0]=(\\
		NewCameraType=CinescriptCameraType_Midpoint, \\
		TargetType=CinescriptTargetType_AllTargets))

; ▌AVATAR: MIND CONTROL (See Psi Operative Soldier section)
		
; ANDROMEDON
; ▀▀▀▀▀▀▀▀▀▀▀▀

; ▌ANDROMEDON: ACID BLOB
AbilityCameras=(AbilityCameraType="Andromedon_AcidBlob", \\
	CameraCuts[0]=(\\
		CutAnimNotify="Andromedon_AcidBlob", \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix="CIN_Quick_Andromedon"), \\
	CameraCuts[1]=(\\
		CutAnimNotify="Andromedon_AcidBlob_Exit", \\
		NewCameraType=CinescriptCameraType_Exit))

; ▌ANDROMEDON: FIST STRIKE
AbilityCameras=(AbilityCameraType="Andromedon_FistStrike", \\
	CameraCuts[0]=(\\
		CutAnimNotify="Andromedon_Melee", \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix="CIN_Quick_Andromedon"), \\
	CameraCuts[1]=(\\
		CutAnimNotify="Andromedon_Melee_Exit", \\
		NewCameraType=CinescriptCameraType_Exit))

; ▌ANDROMEDON: ROBOT BATTLESUIT
AbilityCameras=(AbilityCameraType="Andromedon_RobotBattlesuit", \\
	CameraCuts[0]=(\\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix="CIN_Quick_Wide"))
		
; ARCHON
; ▀▀▀▀▀▀▀▀▀▀▀▀

; ▌ARCHON: BEATDOWN
AbilityCameras=(AbilityCameraType="StandardMelee", \\
	CameraCuts[0]=(\\
		IgnoreStepoutFixups=True, \\
		CutAnimNotify="Archon_Melee", \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix="CIN_Archon_Beatdown"), \\
	CameraCuts[1]=(\\
		CutAfterPrevious=True, \\
		NewCameraType=CinescriptCameraType_Exit))

; ▌ARCHON: FRENZY
AbilityCameras=(AbilityCameraType="Archon_Frenzy", \\
	ExtraAbilityEndDelay=1.5, \\
	CameraCuts[0]=(\\
		IgnoreStepoutFixups=True, \\
		CutAnimNotify="Archon_Frenzy", \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix="CIN_Archon_Frenzy"), \\
	CameraCuts[1]=(\\
		CutAfterPrevious=True, \\
		NewCameraType=CinescriptCameraType_Exit))
		
; ▌ARCHON: BLAZING PINIONS
AbilityCameras=(AbilityCameraType="Archon_BlazingPinions_Stage1", \\
	CameraCuts[0]=(\\
		CutAnimNotify="Archon_PinionsFire", \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		IgnoreStepoutFixups=True, \\
		MatineeCommentPrefix="CIN_Archon_BPinions"), \\
	CameraCuts[1]=(\\
		CutAnimNotify="Archon_PinionsFire_Exit", \\
		NewCameraType=CinescriptCameraType_Midpoint, \\
		TargetType=CinescriptTargetType_AllParticipants))

AbilityCameras=(AbilityCameraType="Archon_BlazingPinions_Stage2", \\
	CameraCuts[0]=(\\
		NewCameraType=CinescriptCameraType_Midpoint, \\
		TargetType=CinescriptTargetType_AllTargets))

; BERSERKER
; ▀▀▀▀▀▀▀▀▀▀▀▀

; ▌BERSERKER: DEVASTATING PUNCH
AbilityCameras=(AbilityCameraType="Berserker_DevastatingPunch", \\
	CameraCuts[0]=(\\
		IgnoreStepoutFixups=True, \\
		CutAnimNotify="Berserker_Melee", \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix="CIN_Berserker_Punch"), \\
	CameraCuts[1]=(\\
		CutAfterPrevious=True, \\
		NewCameraType=CinescriptCameraType_Exit), \\
	CameraCuts[2]=(\\
		IgnoreStepoutFixups=True, \\
		CutAnimNotify="Berserker_MeleeRun", \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix="CIN_Berserker_ChargingSmash"), \\
	CameraCuts[3]=(\\
		CutAfterPrevious=True, \\
		NewCameraType=CinescriptCameraType_Exit))

; ▌BERSERKER: RAGE
AbilityCameras=(AbilityCameraType="Berserker_Rage", \\
	ExtraAbilityEndDelay=1, \\
	CameraCuts[0]=(\\
		IgnoreStepoutFixups=True, \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix="CIN_Berserker_Rage"), \\
	CameraCuts[1]=(\\
		CutAfterPrevious=True, \\
		NewCameraType=CinescriptCameraType_Exit))
		
; CHRYSSALID
; ▀▀▀▀▀▀▀▀▀▀▀▀

; ▌CHRYSSALID: POISONOUS CLAWS
AbilityCameras=(AbilityCameraType="Chryssalid_PoisonousClaws", \\
	CameraCuts[0]=(\\
		CutAnimNotify="Chryssalid_Melee", \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix="CIN_Chryssalid_Claws"), \\
	CameraCuts[1]=(\\
		CutAnimNotify="Chryssalid_Melee_CutOut", \\
		NewCameraType=CinescriptCameraType_Exit), \\
	CameraCuts[2]=(\\
		CutAnimNotify="Chryssalid_RunningMelee", \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix="CIN_Chryssalid_Claws"), \\
	CameraCuts[3]=(\\
		CutAnimNotify="Chryssalid_RunningMelee_CutOut", \\
		NewCameraType=CinescriptCameraType_Exit))

; CODEX
; ▀▀▀▀▀▀▀▀▀▀▀▀

; ▌CODEX: PSI BOMB
AbilityCameras=(AbilityCameraType="Codex_PsiBomb_Stage1", \\
	CameraCuts[0]=(\\
		CutAnimNotify="Codex_PsiBomb", \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix="CIN_Quick_Soldier"), \\
	CameraCuts[1]=(\\
		CutAnimNotify="Codex_PsiBomb_Exit", \\
		NewCameraType=CinescriptCameraType_Exit))

AbilityCameras=(AbilityCameraType="Codex_PsiBomb_Stage2", \\
	ExtraAbilityEndDelay=3, \\
	CameraCuts[0]=(\\
		NewCameraType=CinescriptCameraType_Midpoint, \\
		TargetType=CinescriptTargetType_AllTargets), \\		
	CameraCuts[1]=(\\
		CutDelay=3, \\
		NewCameraType=CinescriptCameraType_Exit))
	
; FACELESS
; ▀▀▀▀▀▀▀▀▀▀▀▀

; ▌FACELESS: CHANGE FORM
AbilityCameras=(AbilityCameraType="Faceless_ChangeForm", \\
	ExtraAbilityEndDelay=.5, \\
	CameraCuts[0]=(\\
		CutAnimNotify="Faceless_ChangeForm", \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix="CIN_Faceless_ChangeForm"))

; ▌FACELESS: SCYTHING CLAWS
AbilityCameras=(AbilityCameraType="Faceless_ScythingClaws", \\
	CameraCuts[0]=(\\
		CutAnimNotify="Faceless_Scything", \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix="CIN_Faceless_ScythingClawsPt1"), \\
	CameraCuts[1]=(\\
		CutAfterPrevious=True, \\
		NewCameraType=CinescriptCameraType_Exit), \\
	CameraCuts[2]=(\\
		CutAnimNotify="Faceless_Scything_CutOut", \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix="CIN_Faceless_ScythingClawsPt2"), \\
	CameraCuts[3]=(\\
		CutAfterPrevious=True, \\
		NewCameraType=CinescriptCameraType_Exit))

; GATEKEEPER
; ▀▀▀▀▀▀▀▀▀▀▀▀

; ▌GATEKEEPER: ANIMA CONSUME
AbilityCameras=(AbilityCameraType="Gatekeeper_Probe", \\
	CameraCuts[0]=(\\
		IgnoreStepoutFixups=True, \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix="CIN_Gatekeeper_Consume")) 

; ▌GATEKEEPER: ANIMA INVERSION (REANIMATION, GATEWAY)
AbilityCameras=(AbilityCameraType="Gatekeeper_AnimaInversion", \\
	CameraCuts[0]=(\\
		IgnoreStepoutFixups=True, \\
		CutAnimNotify="Gatekeeper_AnimaInversion", \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix="CIN_Gatekeeper_Inversion"), \\
	CameraCuts[1]=(\\
		CutAnimNotify="Gatekeeper_AnimaInversion_CutOut", \\
		NewCameraType=CinescriptCameraType_Midpoint, \\
		TargetType=CinescriptTargetType_AllParticipants), \\
	CameraCuts[2]=(\\
		CutAnimNotify="Zombie_Getup", \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix="CIN_Quick_Soldier", \\
		FocusPrimaryTarget=True), \\
	CameraCuts[3]=(\\
		CutAnimNotify="Zombie_Getup_Multi", \\
		NewCameraType=CinescriptCameraType_Exit))

; MUTON
; ▀▀▀▀▀▀▀▀▀▀▀▀

; ▌MUTON: ALIEN GRENADE
AbilityCameras=(AbilityCameraType="StandardGrenadeFiring", \\
	CharacterTemplates[0]=Muton, \\
	ExtraAbilityEndDelay=2, \\
	CameraCuts[0]=(\\
		CutAnimNotify="Muton_Grenade", \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix="CIN_Muton_Grenade"), \\
	CameraCuts[1]=(\\
		CutAfterPrevious=True, \\
		NewCameraType=CinescriptCameraType_Exit))
		;There is also the notify Muton_Grenade_Roll if we want cams for that anim

; ▌MUTON: COUNTERATTACK
; This is included in: SOLDIER / RANGER: SWORD MELEE
; 				       MUTON: BAYONET

; ▌MUTON: EXECUTE
AbilityCameras=(AbilityCameraType="Muton_Execute", \\
	CameraCuts[0]=(\\
		CutAnimNotify="FireStart", \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix="CIN_Muton_FireStart"))

; ▌MUTON: BAYONET
AbilityCameras=(AbilityCameraType="Muton_Punch", \\
	CameraCuts[0]=(\\
		CutAnimNotify="Muton_Bayonet", \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix="CIN_Muton_Bayonet"), \\
	CameraCuts[1]=(\\
		CutAnimNotify="Muton_CounterAttack", \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix="CIN_Muton_Counterattack"))

; SECTOID
; ▀▀▀▀▀▀▀▀▀▀▀▀

; ▌SECTOID: MINDSPIN
AbilityCameras=(AbilityCameraType="Sectoid_Mindspin", \\
	CameraCuts[0]=(\\
		CutAnimNotify="Sectoid_Cast", \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix="CIN_Sectoid_Mindspin"), \\
	CameraCuts[1]=(\\
		CutAfterPrevious=True, \\
		NewCameraType=CinescriptCameraType_OverTheShoulder, \\
		MatineeCommentPrefix="CIN_Soldier_FF_Targeted", \\
		FocusPrimaryTarget=True))

; ▌SECTOID: PSI EXPLOSION
;AbilityCameras=(AbilityCameraType="Sectoid_PsiExplosion", \\
; This is currently working as an accent cam

; ▌SECTOID: PSI REANIMATION
AbilityCameras=(AbilityCameraType="Sectoid_PsiReanimation", \\
	CameraCuts[0]=(\\
		CutAnimNotify="Sectoid_Cast", \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix="CIN_Sectoid_Mindspin"), \\
	CameraCuts[1]=(\\
		CutAfterPrevious=True, \\
		NewCameraType=CinescriptCameraType_Midpoint, \\
		TargetType=CinescriptTargetType_AllParticipants))
	CameraCuts[2]=(\\
		CutAnimNotify="Zombie_Getup", \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix="CIN_Quick_Wide", \\
		FocusPrimaryTarget=True))

; SECTOPOD
; ▀▀▀▀▀▀▀▀▀▀▀▀

; ▌SECTOPOD: WRATH CANNON, STAGE 1
AbilityCameras=(AbilityCameraType="Sectopod_WrathCannon_Stage1", \\
	CameraCuts[0]=(\\
		CutAnimNotify="Sectopod-Low_CannonStart", \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix="CIN_Sectopod_WrathCannonStart_Low"), \\
	CameraCuts[1]=(\\
		CutAfterPrevious=True, \\
		NewCameraType=CinescriptCameraType_Exit), \\
	CameraCuts[2]=(\\
		CutAnimNotify="Sectopod-High_CannonStart", \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix=CIN_Sectopod_WrathCannonStart_High), \\
	CameraCuts[3]=(\\
		CutAfterPrevious=True, \\
		NewCameraType=CinescriptCameraType_Exit))

; ▌SECTOPOD: WRATH CANNON, STAGE 2
AbilityCameras=(AbilityCameraType="Sectopod_WrathCannon_Stage2", \\
	CameraCuts[0]=(\\
		CutAnimNotify="Sectopod-Low_CannonFire", \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix="CIN_Sectopod_WrathCannon_Low"), \\
	CameraCuts[1]=(\\
		CutAfterPrevious=True, \\
		NewCameraType=CinescriptCameraType_Exit), \\
	CameraCuts[2]=(\\
		CutAnimNotify="Sectopod-High_CannonFire", \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix="CIN_Sectopod_WrathCannon_High"), \\
	CameraCuts[3]=(\\
		CutAfterPrevious=True, \\
		NewCameraType=CinescriptCameraType_Exit))

; ▌SECTOPOD: HIGH STANCE	
AbilityCameras=(AbilityCameraType="Sectopod_HighStance", \\
	CameraCuts[0]=(\\
		CutAnimNotify="Sectopod_RaiseUp", \\
		IgnoreStepoutFixups=True, \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix="CIN_Sectopod_HighStance"))
		
; ▌SECTOPOD: LIGHTNING FIELD
AbilityCameras=(AbilityCameraType="Sectopod_LightningField", \\
	CameraCuts[0]=(\\
		NewCameraType=CinescriptCameraType_Midpoint, \\
		TargetType=CinescriptTargetType_AllParticipants))

; VIPER
; ▀▀▀▀▀▀▀▀▀▀▀▀

; ▌VIPER: BIND
AbilityCameras=(AbilityCameraType="Viper_Bind", \\
	ExtraAbilityEndDelay=1, \\
	CameraCuts[0]=(\\
		CutAnimNotify="Viper_Bind", \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix="CIN_Viper_Bind"), \\
	CameraCuts[1]=(\\
		CutAfterPrevious=True, \\
		NewCameraType=CinescriptCameraType_Exit))

; ▌VIPER: STRANGLE PULL
AbilityCameras=(AbilityCameraType="Viper_StranglePull", \\
	ExtraAbilityEndDelay=1, \\
	CameraCuts[0]=(\\
		CutAnimNotify="Viper_Strangle", \\
		CutChance=.6, \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix="CIN_Viper_Strangle"), \\
	CameraCuts[1]=(\\
		CutAnimNotify="Viper_Bind", \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix="CIN_Viper_Bind"))

; ▌VIPER: POISON SPIT (Accent only)
AbilityCameras=(AbilityCameraType="Viper_PoisonSpit")

; ▌ZOMBIE: PSI ZOMBIE
;AbilityCameras=(AbilityCameraType="Zombie_PsiZombie", \\


; XPACK ABILITIES                   
; ▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀

; HEROES OF THE RESISTANCE
; ▀▀▀▀▀▀▀▀▀▀▀▀
	
; ▌HERO / TEMPLAR: REND MELEE, ARC WAVE
; Only plays the cinematic camera for the lethal attacks
AbilityCameras=(AbilityCameraType="Templar_Rend", \\
	CameraCuts[0]=(\\
		CutAnimNotify="Templar_MeleeKill", \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		FocusPrimaryTarget=True, \\
		IgnoreStepoutFixups=True, \\
		MatineeCommentPrefix="CIN_Hero_Rend"), \\
	CameraCuts[1]=(\\
		CutAfterPrevious=True, \\
		NewCameraType=CinescriptCameraType_Exit), \\
	CameraCuts[2]=(\\
		CutAnimNotify="Templar_RunningMeleeKill", \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		FocusPrimaryTarget=True, \\
		IgnoreStepoutFixups=True, \\
		MatineeCommentPrefix="CIN_Hero_MovingRend"), \\
	CameraCuts[3]=(\\
		CutAfterPrevious=True, \\
		NewCameraType=CinescriptCameraType_Exit), \\
	CameraCuts[4]=(\\
		CutAnimNotify="Templar_Turn90MeleeKill", \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		FocusPrimaryTarget=True, \\
		IgnoreStepoutFixups=True, \\
		MatineeCommentPrefix="CIN_Hero_Turn90Rend"), \\
	CameraCuts[5]=(\\
		CutAfterPrevious=True, \\
		NewCameraType=CinescriptCameraType_Exit), \\
	CameraCuts[6]=(\\
		CutAnimNotify="Templar_ArcWave", \\
		NewCameraType=CinescriptCameraType_Midpoint, \\
		TargetType=CinescriptTargetType_AllParticipants), \\
	CameraCuts[7]=(\\
		CutAnimNotify="Muton_CounterAttack", \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix="CIN_Muton_Counterattack"))
		
; ▌HERO / TEMPLAR: IONIC STORM
AbilityCameras=(AbilityCameraType="Templar_IonicStorm", \\
	CameraCuts[0]=(\\
		CutAnimNotify="HeroTemplar_IonicStorm", \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		IgnoreStepoutFixups=True, \\
		MatineeCommentPrefix="CIN_HeroTemplar_IonicStorm"), \\
	CameraCuts[1]=(\\
		CutAfterPrevious=True, \\
		NewCameraType=CinescriptCameraType_Midpoint, \\
		TargetType=CinescriptTargetType_AllParticipants))

; ▌HERO / TEMPLAR: VOID CONDUIT
AbilityCameras=(AbilityCameraType="Templar_VoidConduit", \\
	CameraCuts[0]=(\\
		CutAnimNotify="Templar_VoidConduit", \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix="CIN_HeroTemplar_VoidConduit"), \\
	CameraCuts[1]=(\\
		CutAnimNotify="Templar_VoidConduitTarget", \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		FocusPrimaryTarget=True, \\
		MatineeCommentPrefix="CIN_Quick_Wide"), \\
	CameraCuts[2]=(\\
		CutAnimNotify="Templar_VoidConduitExit", \\
		NewCameraType=CinescriptCameraType_Exit))
		
; ▌HERO / TEMPLAR: STUN STRIKE
; Modifies the existing Psi Amp abilities above
MatineeReplacements=(CharacterTemplates[0]="TemplarSoldier", \\
					 OriginalPrefix="CIN_Soldier_PsiAmp", \\
					 ReplacementPrefix="CIN_HeroTemplar_StunStrike")

; ▌HERO / TEMPLAR: EXCHANGE and INVERT
; Midpoint cams
AbilityCameras=(AbilityCameraType="Templar_Invert", \\
	CameraCuts[0]=(\\
		NewCameraType=CinescriptCameraType_Midpoint, \\
		TargetType=CinescriptTargetType_ShooterAndPrimaryTarget))

AbilityCameras=(AbilityCameraType="Templar_Exchange", \\
	CameraCuts[0]=(\\
		NewCameraType=CinescriptCameraType_Midpoint, \\
		TargetType=CinescriptTargetType_ShooterAndPrimaryTarget))
		
; ▌HERO / TEMPLAR: GHOST
AbilityCameras=(AbilityCameraType="Templar_Ghost", \\
	CameraCuts[0]=(\\
		CutAnimNotify="Templar_GhostCast", \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix="CIN_HeroTemplar_GhostCast"), \\
	CameraCuts[1]=(\\
		CutAfterPrevious=True, \\
		NewCameraType=CinescriptCameraType_Midpoint, \\
		TargetType=CinescriptTargetType_ShooterAndPrimaryTarget), \\
	CameraCuts[2]=(\\
		CutAnimNotify="Templar_GhostArise", \\
		FocusPrimaryTarget=True, \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix="CIN_Quick_Wide"), \\
	CameraCuts[3]=(\\
		CutAnimNotify="Templar_GhostAriseExit", \\
		NewCameraType=CinescriptCameraType_Exit))

; ▌HERO / SKIRMISHER: RECKONING
AbilityCameras=(AbilityCameraType="Skirmisher_Melee", \\
	CameraCuts[0]=(\\
		CutAnimNotify="Skirmisher_Melee", \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		FocusPrimaryTarget=True, \\
		IgnoreStepoutFixups=True, \\
		MatineeCommentPrefix="CIN_HeroSkirmisher_Melee"), \\
	CameraCuts[1]=(\\
		CutAfterPrevious=True, \\
		NewCameraType=CinescriptCameraType_Exit), \\
	CameraCuts[2]=(\\
		CutAnimNotify="Skirmisher_RunningMelee", \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		FocusPrimaryTarget=True, \\
		IgnoreStepoutFixups=True, \\
		MatineeCommentPrefix="CIN_HeroSkirmisher_RunningMelee"), \\
	CameraCuts[3]=(\\
		CutAfterPrevious=True, \\
		NewCameraType=CinescriptCameraType_Exit), \\
	CameraCuts[4]=(\\
		CutAnimNotify="Muton_CounterAttack", \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix="CIN_Muton_Counterattack"))

; ▌HERO / SKIRMISHER: COMBAT PRESENCE
AbilityCameras=(AbilityCameraType="Skirmisher_CombatPresence", \\
	CameraCuts[0]=(\\
		CutAnimNotify="Skirmisher_CombatPresence", \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix="CIN_Quick_Wide"), \\
	CameraCuts[1]=(\\
		CutAnimNotify="Skirmisher_CombatPresenceExit", \\
		NewCameraType=CinescriptCameraType_Midpoint, \\
		TargetType=CinescriptTargetType_ShooterAndPrimaryTarget))	
		
; CHOSEN
; ▀▀▀▀▀▀▀▀▀▀▀▀

; ▌CHOSEN: KIDNAP
AbilityCameras=(AbilityCameraType="Chosen_Kidnap", \\
	ExtraAbilityEndDelay=2, \\
	CameraCuts[0]=(\\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix="CIN_Chosen_Kidnap", \\
		ShouldAlwaysShow=True), \\
	CameraCuts[1]=(\\
		CutAfterPrevious=True, \\
		NewCameraType=CinescriptCameraType_Exit))
		
; ▌CHOSEN: EXTRACT KNOWLEDGE
AbilityCameras=(AbilityCameraType="Chosen_Extract", \\
	CameraCuts[0]=(\\
		CutAnimNotify="Chosen_Extract", \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix="CIN_Chosen_Extract", \\
		ShouldAlwaysShow=True), \\
	CameraCuts[1]=(\\
		CutAfterPrevious=True, \\
		NewCameraType=CinescriptCameraType_Exit))
	
; ▌CHOSEN: GRENADE THROW
AbilityCameras=(AbilityCameraType="StandardGrenadeFiring", \\
	ExtraAbilityEndDelay=2, \\
	CharacterTemplates[0]=ChosenAssassin, \\
	CharacterTemplates[1]=ChosenAssassinM2, \\
	CharacterTemplates[2]=ChosenAssassinM3, \\
	CharacterTemplates[3]=ChosenAssassinM4, \\
	CharacterTemplates[4]=ChosenSniper, \\
	CharacterTemplates[5]=ChosenSniperM2, \\
	CharacterTemplates[6]=ChosenSniperM3, \\
	CharacterTemplates[7]=ChosenSniperM4, \\
	CameraCuts[0]=(\\
		CutAnimNotify="Chosen_GrenadeThrow", \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix="CIN_Chosen_GrenadeThrow"), \\
	CameraCuts[1]=(\\
		CutAfterPrevious=True, \\
		NewCameraType=CinescriptCameraType_Midpoint, \\
		TargetType=CinescriptTargetType_AllParticipants))

; ▌CHOSEN: ASSASSIN MELEE
AbilityCameras=(AbilityCameraType="ChosenAssassin_PartingSilk", \\
	CameraCuts[0]=(\\
		CutAnimNotify="ChosenAssassin_Melee", \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		FocusPrimaryTarget=True, \\
		IgnoreStepoutFixups=True, \\
		MatineeCommentPrefix="CIN_ChosenAssassin_Melee"), \\
	CameraCuts[1]=(\\
		CutAfterPrevious=True, \\
		NewCameraType=CinescriptCameraType_Exit), \\
	CameraCuts[2]=(\\
		CutAnimNotify="ChosenAssassin_RunningMelee", \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		FocusPrimaryTarget=True, \\
		IgnoreStepoutFixups=True, \\
		MatineeCommentPrefix="CIN_ChosenAssassin_RunningMelee"), \\
	CameraCuts[3]=(\\
		CutAfterPrevious=True, \\
		NewCameraType=CinescriptCameraType_Exit))

; ▌CHOSEN: ASSASSIN HARBOR WAVE
AbilityCameras=(AbilityCameraType="ChosenAssassin_HarborWave", \\
	CameraCuts[0]=(\\
		CutAnimNotify="ChosenAssassin_HarborWave", \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix="CIN_ChosenAssassin_HarborWave"), \\
	CameraCuts[1]=(\\
		CutAfterPrevious=True, \\
		NewCameraType=CinescriptCameraType_Exit))

; ▌CHOSEN: WARLOCK MIND CONTROL (This uses the soldier's Mind Control ability template)
; If the second notify calls a camera that is blocked, it will hit the end of the Matinee and exit
AbilityCameras=(AbilityCameraType="Psionic_FireAtUnit", \\
	CharacterTemplates[0]=ChosenWarlock, \\
	CharacterTemplates[1]=ChosenWarlockM2, \\
	CharacterTemplates[2]=ChosenWarlockM3, \\
	CharacterTemplates[3]=ChosenWarlockM4, \\
	CameraCuts[0]=(\\
		CutAnimNotify="ChosenWarlock_PsiAttack", \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix="CIN_Quick_Chosen"), \\
	CameraCuts[1]=(\\
		CutAfterPrevious=True, \\
		NewCameraType=CinescriptCameraType_Midpoint, \\
		TargetType=CinescriptTargetType_AllParticipants), \\
	CameraCuts[2]=(\\
		CutAnimNotify="ChosenWarlock_PsiAttackExit", \\
		NewCameraType=CinescriptCameraType_OverTheShoulder, \\
		MatineeCommentPrefix="CIN_Soldier_FF_Targeted", \\
		FocusPrimaryTarget=True), \\
	CameraCuts[3]=(\\
		CutAnimNotify="MindControl_Exit", \\
		NewCameraType=CinescriptCameraType_Exit))

; ▌CHOSEN: WARLOCK MIND SCORCH
; If the second notify calls a camera that is blocked, it will hit the end of the Matinee and exit
AbilityCameras=(AbilityCameraType="ChosenWarlock_MindScorch", \\
	CameraCuts[0]=(\\
		CutAnimNotify="ChosenWarlock_MindScorch", \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix="CIN_ChosenWarlock_MindScorch"), \\
	CameraCuts[1]=(\\
		CutAnimNotify="ChosenWarlock_MindScorchExit", \\
		TargetType=CinescriptTargetType_AllParticipants, \\
		NewCameraType=CinescriptCameraType_Midpoint))
		
; ▌CHOSEN: SPECTRAL ZOMBIE
AbilityCameras=(AbilityCameraType="Warlock_SpectralZombie", \\
	CameraCuts[0]=(\\
		CutAnimNotify="ChosenWarlock_SpectralZombie", \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		IgnoreStepoutFixups=True, \\
		MatineeCommentPrefix="CIN_ChosenWarlock_SpectralZombie"), \\
	CameraCuts[1]=(\\
		CutAnimNotify="ChosenWarlock_SpectralZombieExit", \\
		NewCameraType=CinescriptCameraType_Exit))
		
; ▌CHOSEN: WARLOCK SPECTRAL ARMY
AbilityCameras=(AbilityCameraType="ChosenWarlock_SpectralArmy", \\
	CameraCuts[0]=(\\
		CutAnimNotify="ChosenWarlock_SpectralArmy", \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix="CIN_Quick_Chosen"), \\
	CameraCuts[1]=(\\
		CutAnimNotify="ChosenWarlock_SpectralArmyExit", \\
		NewCameraType=CinescriptCameraType_Midpoint))

; SPECTRE
; ▀▀▀▀▀▀▀▀▀▀▀▀

; ▌SPECTRE: SHADOWBIND
; Based on Target seems to work a little better, for cases around corners, where the target doesn't turn all the way to face the attacker
AbilityCameras=(AbilityCameraType="Spectre_Shadowbind", \\
	CameraCuts[0]=(\\
		CutAnimNotify="Spectre_Shadowbind", \\
		IgnoreStepoutFixups=True, \\
		FocusPrimaryTarget=True, \\
		NewCameraType=CinescriptCameraType_Matinee, \\
		MatineeCommentPrefix="CIN_Spectre_Shadowbind"), \\
	CameraCuts[1]=(\\
		CutAfterPrevious=True, \\
		NewCameraType=CinescriptCameraType_Exit))


[XComGame.X2Action_EndOfTurnSoldierReaction]
; Valid reaction types are
;	EndOfTurnReactionType_Rally, for when the aliens first appear
;	EndOfTurnReactionType_Victory, for when you beat the aliens back
;	EndOfTurnReactionType_Sad, for when members of your squad bites it
;	EndOfTurnReactionType_Hush, for when the aliens are not visible and your units are afraid of the darkness
;Reactions=(ReactionType=EndOfTurnReactionType_Sad, MatineePrefix="CIN_Quick_Soldier", Animation=HL_SignalReactToDeathB, Weight=1, LowCover=false)
;Reactions=(ReactionType=EndOfTurnReactionType_Sad, MatineePrefix="CIN_Soldier_Quick_Low", Animation=HL_SignalReactToDeathB, Weight=1, LowCover=true)
